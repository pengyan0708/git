import matplotlib.pyplot as plt

self_lst = [0.11215, 0.15894999999999998, 0.15084999999999998, 0.12215000000000001, 0.0988, 0.13815, 0.23965, 0.16785, 0.1037, 0.19645, 0.26005, 0.30255, 0.31185, 0.23270000000000002, 0.33525, 0.2792, 0.26185, 0.3555, 0.24435, 0.2783, 0.25645, 0.2581, 0.3516, 0.4179, 0.54355, 0.33825, 0.31520000000000004, 0.39465, 0.44, 0.39515, 0.49160000000000004, 0.5649500000000001, 0.5506, 0.60085, 0.41435, 0.5138, 0.50755, 0.4871, 0.46330000000000005, 0.51435, 0.6113500000000001, 0.5899, 0.5606, 0.39775, 0.5367, 0.5529499999999999, 0.5864, 0.4996, 0.5710999999999999, 0.6983, 0.6381, 0.67825, 0.63435, 0.6589499999999999, 0.6321, 0.60385, 0.61155, 0.6581, 0.7262500000000001, 0.6998500000000001, 0.7781, 0.81075, 0.6866, 0.7259, 0.77495, 0.74165, 0.6588499999999999, 0.77725, 0.79315, 0.76995, 0.7235, 0.75, 0.8307, 0.86335, 0.83325, 0.64795, 0.71925, 0.7762500000000001, 0.82395, 0.8162499999999999, 0.79375, 0.8101499999999999, 0.82755, 0.8651500000000001, 0.8188, 0.8295, 0.8087500000000001, 0.77705, 0.8302, 0.865, 0.8612, 0.8954500000000001, 0.8732500000000001, 0.85925, 0.86515, 0.8713500000000001, 0.89515, 0.89075, 0.8951, 0.9099999999999999, 0.85835, 0.83805, 0.83505, 0.86895, 0.9086, 0.9110499999999999, 0.887, 0.9065000000000001, 0.87445, 0.8998999999999999, 0.90495, 0.9135, 0.9171, 0.9126000000000001, 0.9097, 0.91585, 0.9098999999999999, 0.88775, 0.8916999999999999, 0.9314, 0.9287000000000001, 0.917, 0.8765000000000001, 0.88825, 0.8973, 0.91875, 0.9324, 0.91945, 0.8632, 0.9108, 0.87385, 0.9241999999999999, 0.9327000000000001, 0.92085, 0.93215, 0.9100999999999999, 0.9238, 0.9344, 0.9145, 0.8781, 0.8515999999999999, 0.9133, 0.9228000000000001, 0.9379, 0.93835, 0.9327, 0.9349000000000001, 0.91465, 0.9436, 0.9437, 0.9391499999999999, 0.9270499999999999, 0.9379, 0.93775, 0.9397500000000001, 0.9430499999999999, 0.9398, 0.9456, 0.94365, 0.91585, 0.94415, 0.9446, 0.9457500000000001, 0.93545, 0.92395, 0.94365, 0.9467, 0.92645, 0.9353, 0.92215, 0.92805, 0.9477, 0.9480999999999999, 0.9419, 0.9359500000000001, 0.9394, 0.9481999999999999, 0.95055, 0.9436, 0.9501, 0.94885, 0.94145, 0.94475, 0.9473499999999999, 0.9428, 0.93415, 0.9519, 0.9518500000000001, 0.9453, 0.9359999999999999, 0.9444, 0.9487000000000001, 0.9474, 0.9414, 0.9439, 0.9448000000000001, 0.93675, 0.93155, 0.9373, 0.9499500000000001, 0.9423, 0.93225, 0.9511000000000001, 0.95305, 0.95385, 0.95175, 0.94765, 0.95175, 0.9541, 0.95235, 0.94825, 0.95305, 0.9350499999999999, 0.9529, 0.95695, 0.9459500000000001, 0.9457500000000001, 0.9436, 0.9571000000000001, 0.95665, 0.9521999999999999, 0.9446, 0.9531499999999999, 0.9541, 0.95605, 0.9484, 0.9507, 0.9509, 0.93835, 0.95635, 0.95635, 0.9488, 0.9559500000000001, 0.9592, 0.9567, 0.9483999999999999, 0.94735, 0.9553, 0.9516, 0.95475, 0.9589000000000001, 0.9589, 0.9591000000000001, 0.9606, 0.96025, 0.9593499999999999, 0.9573, 0.9589000000000001, 0.9586, 0.95685, 0.95895, 0.96045, 0.9647, 0.964, 0.9579500000000001, 0.9526, 0.9552499999999999, 0.9611, 0.95895, 0.95735, 0.9597500000000001, 0.9588, 0.96165, 0.9518, 0.9623999999999999, 0.95865, 0.95625, 0.95845, 0.963, 0.9601500000000001, 0.95475, 0.9581999999999999, 0.9506, 0.95855, 0.9544, 0.95505, 0.9610000000000001, 0.9451499999999999, 0.9528000000000001, 0.9592, 0.96235, 0.9639, 0.95245, 0.96255, 0.9654, 0.9639, 0.9602999999999999, 0.9621, 0.9605999999999999, 0.96225, 0.9593499999999999, 0.9632000000000001, 0.9612499999999999, 0.9597, 0.9591000000000001, 0.96445, 0.9644999999999999, 0.9581, 0.9571, 0.96295]
non_self_lst = [0.09659999999999999, 0.1298, 0.1176, 0.29765, 0.16525, 0.13269999999999998, 0.1567, 0.20384999999999998, 0.1721, 0.22899999999999998, 0.27715, 0.28055, 0.23865, 0.18585, 0.26325, 0.36324999999999996, 0.393, 0.3943, 0.38865, 0.2724, 0.27525, 0.2727, 0.33265, 0.36385, 0.318, 0.4355, 0.33440000000000003, 0.39459999999999995, 0.43879999999999997, 0.4111, 0.5656, 0.49420000000000003, 0.49344999999999994, 0.56005, 0.5577000000000001, 0.50555, 0.6266, 0.52195, 0.5417, 0.524, 0.6112500000000001, 0.63565, 0.6709, 0.6547499999999999, 0.6229499999999999, 0.53195, 0.57875, 0.6891, 0.7503, 0.74375, 0.76425, 0.62435, 0.6969, 0.726, 0.7503, 0.7939, 0.8174, 0.8042, 0.71485, 0.7179, 0.8207, 0.84885, 0.88815, 0.8468, 0.7434499999999999, 0.79285, 0.7281500000000001, 0.84915, 0.8906000000000001, 0.86765, 0.8835500000000001, 0.80655, 0.7968500000000001, 0.8402000000000001, 0.8363499999999999, 0.8893500000000001, 0.8489, 0.76965, 0.7781499999999999, 0.84645, 0.8565499999999999, 0.84425, 0.86895, 0.899, 0.9125, 0.9168499999999999, 0.9046000000000001, 0.89925, 0.8628, 0.87905, 0.88855, 0.9066000000000001, 0.913, 0.90415, 0.9063, 0.90035, 0.8724000000000001, 0.91125, 0.8812500000000001, 0.88795, 0.91785, 0.92715, 0.9125000000000001, 0.91425, 0.9304, 0.9244, 0.9254, 0.9111, 0.9314, 0.91735, 0.9198500000000001, 0.92455, 0.9266, 0.9164, 0.91415, 0.91935, 0.9238999999999999, 0.93015, 0.9365, 0.93075, 0.9195, 0.9344, 0.92565, 0.9317500000000001, 0.9358500000000001, 0.9331, 0.9343, 0.9293, 0.9198500000000001, 0.9281999999999999, 0.9311, 0.9296, 0.9417, 0.9431499999999999, 0.92855, 0.9430000000000001, 0.94205, 0.9424, 0.9349000000000001, 0.942, 0.9371, 0.9227000000000001, 0.93805, 0.9381999999999999, 0.9473, 0.9339, 0.9434, 0.9443, 0.94945, 0.9476, 0.9346, 0.9096, 0.95035, 0.9387, 0.9390000000000001, 0.9328, 0.94455, 0.9359, 0.9474, 0.9408000000000001, 0.9496, 0.94695, 0.9307, 0.9492, 0.9479500000000001, 0.9412, 0.9381999999999999, 0.95185, 0.9546, 0.95015, 0.9488, 0.9486, 0.9478, 0.9339500000000001, 0.95165, 0.95455, 0.94835, 0.95025, 0.955, 0.94845, 0.95355, 0.9506, 0.9537, 0.95165, 0.9504, 0.9403, 0.95235, 0.9541, 0.955, 0.9481999999999999, 0.93375, 0.94985, 0.9512, 0.95235, 0.9586, 0.9489000000000001, 0.95175, 0.9534, 0.9544999999999999, 0.95525, 0.9550000000000001, 0.9511000000000001, 0.94725, 0.9540500000000001, 0.9604999999999999, 0.96, 0.9578, 0.9606, 0.9565, 0.9583, 0.9621, 0.96085, 0.95435, 0.9532499999999999, 0.9553, 0.95155, 0.9538, 0.9593, 0.9549, 0.95745, 0.9471, 0.9521999999999999, 0.95215, 0.9603999999999999, 0.9583999999999999, 0.96025, 0.9598500000000001, 0.95935, 0.9606, 0.96155, 0.9579, 0.9562999999999999, 0.94945, 0.9460500000000001, 0.9498500000000001, 0.9541, 0.95135, 0.9551499999999999, 0.9533, 0.9551000000000001, 0.9479, 0.9484, 0.9619, 0.9524, 0.95685, 0.958, 0.95025, 0.9590000000000001, 0.95305, 0.9594499999999999, 0.9608, 0.9624, 0.95635, 0.9556, 0.95875, 0.9581500000000001, 0.9484, 0.95785, 0.9558, 0.95665, 0.9649, 0.96, 0.9621999999999999, 0.962, 0.9618500000000001, 0.962, 0.9585999999999999, 0.9578, 0.9613499999999999, 0.95575, 0.95695, 0.9561, 0.9631000000000001, 0.957, 0.96355, 0.9627, 0.9641, 0.96255, 0.95975, 0.95865, 0.9576, 0.9619500000000001, 0.9631000000000001, 0.95995, 0.9641, 0.96665, 0.9624, 0.9643999999999999, 0.96115, 0.96295, 0.9679500000000001, 0.96255, 0.9575, 0.96045, 0.9614, 0.9638500000000001, 0.9601999999999999, 0.9612, 0.96285, 0.96095]


if non_self_lst or self_lst:
    plt.plot(range(len(self_lst)), self_lst, label='self_acc')
    plt.plot(range(len(non_self_lst)), non_self_lst, label='alone_self_acc')
    plt.xlabel('Iterations')
    plt.ylabel('Test Accuracy')
    #plt.title(
    #    f'Test Accuracy Over Iterations\nAggregation: {args.aggregation}, Non-iid: {args.bias}, Attack Type: {args.byz_type}\nDataset: {args.dataset},Attack Number:{args.nbyz},LR:{args.lr}')
    plt.grid(True)
    # 显示图例
    plt.legend()
    # 显示图
    plt.show()
else:
    print("No test accuracy data available to plot.")